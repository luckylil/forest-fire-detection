# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P2-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 2  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]  #2
  - [-1, 3, TripletAttention, []] #3
  - [2, 1, Conv, [256, 3, 2]]  # 4-P3/8
  - [-1, 6, C2f, [256, True]]  #5
  - [-1, 3, TripletAttention, []]   #6
  - [5, 1, Conv, [512, 3, 2]]  # 7-P4/16
  - [-1, 6, SwinTransformer, [512, True]] #8
  - [-1, 3, TripletAttention, []]   #9
  - [8, 1, Conv, [1024, 3, 2]]  # 10-P5/32
  - [-1, 3, SwinTransformer, [1024, True]] #11
  - [-1, 1, SPPF, [1024, 5]]  # 12
  - [-1, 3, TripletAttention, []]  #13

# YOLOv8.0n head
head:
  - [[3, 6, 9, 13], 1, Detect_AFPN_P2345_Custom, [nc, 128, 'C2f']]  # Detect(P3, P4, P5)
